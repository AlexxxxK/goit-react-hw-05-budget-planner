{"version":3,"sources":["redux/reducers/budgetReducer.js","redux/actions/actionTypes.js","redux/reducers/inputBudgetReducer.js","redux/reducers/expensesReducer.js","redux/reducers/inputExpensesReducer.js","redux/reducers/index.js","redux/store/store.js","components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","redux/actions/budgetActions.js","redux/selectors/selectors.js","components/BudgetForm/BudgetForm.jsx","redux/actions/inputBudgetActions.js","components/ExpenseForm/ExpenseForm.jsx","redux/actions/inputExpensesActions.js","redux/actions/expensesActions.js","components/ExpensesTable/ExpensesTable.jsx","components/Values/Stat/Stat.jsx","components/Values/Values.jsx","helpers/calculateTotalExpenses.js","helpers/calculateBalance.js","containers/App.jsx","index.js"],"names":["budgetReducer","state","type","payload","inputBudgetReducer","initialState","expensesReducer","filter","expense","id","name","amount","rootReducer","combineReducers","budget","inputBudgetValue","expenses","inputExpenses","store","createStore","devToolsEnhancer","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","value","onChange","placeholder","defaultProps","StyledButton","button","Button","onClick","saveBudget","Number","getBudgetAmount","getInputBudgetValue","getInputExpensesName","getInputExpensesAmount","getExpenses","toast","configure","autoClose","draggable","BudgetForm","handleSubmit","e","preventDefault","clearInput","error","position","POSITION","TOP_CENTER","this","inputChange","Component","mapDispatchToProps","target","connect","ExpenseForm","inputExpensesName","inputExpensesAmount","addExpense","trim","length","warn","inputNameChange","inputAmountChange","shortid","generate","Table","table","removeExpense","map","key","Container","div","isPositive","p","Value","Stat","section","totalExpenses","reduce","total","calculateTotalExpenses","balance","calculateBalance","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80757717.chunk.js","sourcesContent":["import { SAVE_BUDGET } from \"../actions/actionTypes\";\n\nconst initialState = 0;\n\nconst budgetReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SAVE_BUDGET:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;\n","// budget constants\nexport const SAVE_BUDGET = \"SAVE_BUDGET\";\n\n// input constants\nexport const INPUT_CHANGE = \"INPUT_CHANGE\";\nexport const INPUT_NAME_CHANGE = \"INPUT_NAME_CHANGE\";\nexport const INPUT_AMOUNT_CHANGE = \"INPUT_AMOUNT_CHANGE\";\nexport const CLEAR_INPUT = \"CLEAR_INPUT\";\n\n// expenses constants\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const REMOVE_EXPENSE = \"REMOVE_EXPENSE\";\n","import { INPUT_CHANGE, CLEAR_INPUT } from \"../actions/actionTypes\";\n\nconst initialState = \"\";\n\nconst inputBudgetReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case INPUT_CHANGE:\n      return payload;\n\n    case CLEAR_INPUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default inputBudgetReducer;\n","import { ADD_EXPENSE, REMOVE_EXPENSE } from \"../actions/actionTypes\";\n\nconst initialState = [];\n\nconst expensesReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_EXPENSE:\n      return [...state, payload];\n\n    case REMOVE_EXPENSE:\n      return state.filter(expense => expense.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import {\n  INPUT_NAME_CHANGE,\n  INPUT_AMOUNT_CHANGE,\n  CLEAR_INPUT,\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  name: \"\",\n  amount: \"\",\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case INPUT_NAME_CHANGE:\n      return {\n        ...state,\n        name: payload,\n      };\n\n    case INPUT_AMOUNT_CHANGE:\n      return {\n        ...state,\n        amount: payload,\n      };\n\n    case CLEAR_INPUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport budgetReducer from \"./budgetReducer\";\nimport inputBudgetReducer from \"./inputBudgetReducer\";\nimport expensesReducer from \"./expensesReducer\";\nimport inputExpensesReducer from \"./inputExpensesReducer\";\n\nconst rootReducer = combineReducers({\n  budget: budgetReducer,\n  inputBudgetValue: inputBudgetReducer,\n  expenses: expensesReducer,\n  inputExpenses: inputExpensesReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf.isRequired,\n};\n\nexport default Form;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.arrayOf.isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = \" text\",\n  value = \"\",\n  onChange = () => null,\n  name = \"\",\n  placeholder,\n}) => (\n  <StyledInput\n    type={type}\n    value={value}\n    onChange={onChange}\n    name={name}\n    placeholder={placeholder}\n  />\n);\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nInput.defaultProps = {\n  name: \"\",\n  placeholder: \"\",\n};\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type, label, onClick }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  onClick: () => null,\n  type: \"button\",\n  label: \"\",\n};\n\nexport default Button;\n","import { SAVE_BUDGET } from \"./actionTypes\";\n\nconst saveBudget = amount => ({\n  type: SAVE_BUDGET,\n  payload: Number(amount),\n});\n\nexport default saveBudget;\n","export const getBudgetAmount = state => state.budget;\nexport const getInputBudgetValue = state => state.inputBudgetValue;\nexport const getInputExpensesName = state => state.inputExpenses.name;\nexport const getInputExpensesAmount = state => state.inputExpenses.amount;\nexport const getExpenses = state => state.expenses;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport Form from \"../shared/Form\";\nimport Label from \"../shared/Label\";\nimport Input from \"../shared/Input\";\nimport Button from \"../shared/Button\";\nimport saveBudget from \"../../redux/actions/budgetActions\";\nimport { getInputBudgetValue } from \"../../redux/selectors/selectors\";\nimport {\n  inputChange,\n  clearInput,\n} from \"../../redux/actions/inputBudgetActions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure({\n  autoClose: 6000,\n  draggable: false,\n});\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass BudgetForm extends Component {\n  static propTypes = {\n    saveBudget: PropTypes.func.isRequired,\n    inputBudgetValue: PropTypes.string.isRequired,\n    inputChange: PropTypes.func.isRequired,\n    clearInput: PropTypes.func.isRequired,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { inputBudgetValue, saveBudget, clearInput } = this.props;\n\n    if (Number(inputBudgetValue) <= 0) {\n      toast.error(\"Please enter valid budget amount!\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n      return;\n    }\n\n    saveBudget(inputBudgetValue);\n    clearInput();\n  };\n\n  render() {\n    const { inputBudgetValue, inputChange } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            type=\"number\"\n            value={inputBudgetValue}\n            onChange={inputChange}\n            placeholder=\"0\"\n          />\n        </Label>\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  inputBudgetValue: getInputBudgetValue(state),\n});\n\nconst mapDispatchToProps = {\n  saveBudget,\n  inputChange,\n  clearInput,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BudgetForm);\n","import { INPUT_CHANGE, CLEAR_INPUT } from \"./actionTypes\";\n\nexport const inputChange = e => ({\n  type: INPUT_CHANGE,\n  payload: e.target.value,\n});\n\nexport const clearInput = () => ({\n  type: CLEAR_INPUT,\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport Form from \"../shared/Form\";\nimport Label from \"../shared/Label\";\nimport Input from \"../shared/Input\";\nimport Button from \"../shared/Button\";\nimport {\n  inputNameChange,\n  inputAmountChange,\n  clearInput,\n} from \"../../redux/actions/inputExpensesActions\";\nimport {\n  getInputExpensesName,\n  getInputExpensesAmount,\n  getBudgetAmount,\n} from \"../../redux/selectors/selectors\";\nimport { addExpense } from \"../../redux/actions/expensesActions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure({\n  autoClose: 6000,\n  draggable: false,\n});\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass ExpenseForm extends Component {\n  static propTypes = {\n    inputExpensesName: PropTypes.string.isRequired,\n    inputExpensesAmount: PropTypes.string.isRequired,\n    inputNameChange: PropTypes.func.isRequired,\n    inputAmountChange: PropTypes.func.isRequired,\n    clearInput: PropTypes.func.isRequired,\n    addExpense: PropTypes.func.isRequired,\n    budget: PropTypes.number.isRequired,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      clearInput,\n      inputExpensesName,\n      inputExpensesAmount,\n      addExpense,\n      budget,\n    } = this.props;\n\n    if (!budget) {\n      toast.error(\"Please enter your budget first!\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n      return;\n    }\n    if (inputExpensesName.trim().length === 0) {\n      toast.error(\"Please enter transaction name!\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n      return;\n    }\n    if (inputExpensesAmount <= 0) {\n      toast.error(\"Please enter valid transaction amount!\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n      return;\n    }\n    if (inputExpensesAmount > budget) {\n      toast.warn(\n        \"Be careful! Your spending habbits are going to run you into debts!\",\n        {\n          position: toast.POSITION.TOP_CENTER,\n        },\n      );\n    }\n\n    addExpense(inputExpensesName, inputExpensesAmount);\n    clearInput();\n  };\n\n  render() {\n    const {\n      inputExpensesName,\n      inputExpensesAmount,\n      inputNameChange,\n      inputAmountChange,\n    } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={inputExpensesName}\n            onChange={inputNameChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={inputExpensesAmount}\n            onChange={inputAmountChange}\n            placeholder=\"0\"\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  inputExpensesName: getInputExpensesName(state),\n  inputExpensesAmount: getInputExpensesAmount(state),\n  budget: getBudgetAmount(state),\n});\n\nconst mapDispatchToProps = {\n  inputNameChange,\n  inputAmountChange,\n  clearInput,\n  addExpense,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import {\n  INPUT_NAME_CHANGE,\n  INPUT_AMOUNT_CHANGE,\n  CLEAR_INPUT,\n} from \"./actionTypes\";\n\nexport const inputNameChange = e => ({\n  type: INPUT_NAME_CHANGE,\n  payload: e.target.value,\n});\n\nexport const inputAmountChange = e => ({\n  type: INPUT_AMOUNT_CHANGE,\n  payload: e.target.value,\n});\n\nexport const clearInput = () => ({\n  type: CLEAR_INPUT,\n});\n","import shortid from \"shortid\";\nimport { ADD_EXPENSE, REMOVE_EXPENSE } from \"./actionTypes\";\n\nexport const addExpense = (name, amount) => ({\n  type: ADD_EXPENSE,\n  payload: {\n    id: shortid.generate(),\n    name,\n    amount: Number(amount),\n  },\n});\n\nexport const removeExpense = id => ({\n  type: REMOVE_EXPENSE,\n  payload: id,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../shared/Button\";\nimport { getExpenses } from \"../../redux/selectors/selectors\";\nimport { removeExpense } from \"../../redux/actions/expensesActions\";\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ expenses = [], removeExpense }) => (\n  <>\n    {expenses.length && (\n      <Table>\n        <thead>\n          <tr>\n            <th>Expense name</th>\n            <th>Expense amount</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {expenses.map(({ id, name, amount }) => (\n            <tr key={id}>\n              <td>{name}</td>\n              <td>{amount}</td>\n              <td>\n                <Button label=\"Delete\" onClick={() => removeExpense(id)} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    )}\n  </>\n);\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  expenses: getExpenses(state),\n});\n\nconst mapDispatchToProps = {\n  removeExpense,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? \"#388E3C\" : \"#D32F2F\")};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool.isRequired,\n};\n\nexport default Stat;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Stat from \"./Stat/Stat\";\nimport { getBudgetAmount, getExpenses } from \"../../redux/selectors/selectors\";\nimport calculateBalance from \"../../helpers/calculateBalance\";\nimport calculateTotalExpenses from \"../../helpers/calculateTotalExpenses\";\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses }) => {\n  const totalExpenses = calculateTotalExpenses(expenses);\n  const balance = calculateBalance(budget, totalExpenses);\n  return (\n    <Container>\n      <Stat label=\"Budget\" value={budget} isPositive />\n      <Stat label=\"Expenses\" value={totalExpenses} isPositive={false} />\n      <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n    </Container>\n  );\n};\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  budget: getBudgetAmount(state),\n  expenses: getExpenses(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Values);\n","export default expenses => {\n  return expenses.reduce((total, expense) => total + expense.amount, 0);\n};\n","export default (budget, expenses) => budget - expenses;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BudgetForm from \"../components/BudgetForm/BudgetForm\";\nimport ExpenseForm from \"../components/ExpenseForm/ExpenseForm\";\nimport ExpensesTable from \"../components/ExpensesTable/ExpensesTable\";\nimport Values from \"../components/Values/Values\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => (\n  <Container>\n    <BudgetForm />\n    <Values />\n    <ExpenseForm />\n    <ExpensesTable />\n  </Container>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport App from \"./containers/App\";\n\nimport \"./styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}